# for (j in 1:4) {
#   axis(side = j, at=seq(0, 20, by = 5))
# }
# for (j in 0:20) {
#   segments(j, 0, j, 20)
#   segments(0, j, 20, j)
# }
# for (j in 0:4) {
#   abline(h = j*5, lty=3)
#   abline(v = j*5, lty=3)
# }
#
shrb_px <- data.frame(matrix(rep(NA, pori_sm), nrow=1))[numeric(0), ]
shrb_py <- data.frame(matrix(rep(NA, pori_sm), nrow=1))[numeric(0), ]
for(j in 1:nrow(temp_WsiteD)){
# 灌木なら
if(temp_WsiteD$pc.wm[j] == ""){
# 長軸（半分）
t_a <- temp_WsiteD$long_axis.cm.[j]/200
# 短軸（半分）
t_b <- temp_WsiteD$short_axis.cm.[j]/200
# 回転角
t_theta <- temp_WsiteD$shrub_dir.E0_left.[j] * pi / 180
# 中心のx座標
t_cenx <- temp_WsiteD$x.m.[j]
# 中心のy座標
t_ceny <- temp_WsiteD$y.m.[j]
# 楕円周上の点の座標
t_x <- t_a * cos(base_x) * cos(t_theta) - t_b * sin(base_x) * sin(t_theta) + t_cenx
t_y <- t_a * cos(base_x) * sin(t_theta) + t_b * sin(base_x) * cos(t_theta) + t_ceny
t_x <- data.frame(rbind(t_x))
row.names(t_x) <- j
t_y <- data.frame(rbind(t_y))
row.names(t_y) <- j
shrb_px <- rbind(shrb_px,t_x)
shrb_py <- rbind(shrb_py,t_y)
# 楕円を描画
# polygon(t_x, t_y, col =gray(1 - (temp_WsiteD$height.cm.[j] - min_h) / max_h))
# 風速計なら
}#else if(temp_WsiteD$pc.wm[j] %in% c("l", "m", "h") ){
#   # 中心のx座標
#   t_cenx <- temp_WsiteD$x.m.[j]
#   # 中心のy座標
#   t_ceny <- temp_WsiteD$y.m.[j]
#
#   points(t_cenx,t_ceny,pch = 14, cex=2)
#   text(t_cenx,t_ceny + 0.6, paste("wm_", temp_WsiteD$pc.wm[j],sep = ""), cex=1.1)
# # 飛砂計なら
# }else{
#   # 中心のx座標
#   t_cenx <- temp_WsiteD$x.m.[j]
#   # 中心のy座標
#   t_ceny <- temp_WsiteD$y.m.[j]
#
#   points(t_cenx,t_ceny,pch = 8, cex=2)
#   text(t_cenx,t_ceny + 0.6, paste("pc_", temp_WsiteD$pc.wm[j],sep = ""), cex=1.1)
# }
}
result.shrb.distr <- data.frame(matrix(rep(NA, septime + 2), nrow=1))[numeric(0), ]
colnames(result.shrb.distr) <- c("grid_x","grid_y",seq(0, 360-360/septime, by = 360/septime))
pb <- txtProgressBar(min = 1, max = 21^2, style = 3)
for (xi in 1:21) {
for (yi in 1:21) {
i_linepointx <- linepointx + p_grid_x[xi]
i_linepointy <- linepointy + p_grid_y[yi]
temp_rs <- data.frame(rbind(c(p_grid_x[xi], p_grid_y[yi], rep(NA,septime))))
colnames(temp_rs) <- c("grid_x","grid_y",seq(0, 360-360/septime, by = 360/septime))
result.shrb.distr <- rbind(result.shrb.distr,temp_rs)
for (iang in 1:septime) {
lestsh_dist　<- c()
for (ishrb in 1:nrow(temp_WsiteD)) {
lineang <- as.numeric(colnames(i_linepointx))[iang]
res <- point.in.polygon(i_linepointx[,iang], i_linepointy[,iang],
shrb_px[ishrb,], shrb_py[ishrb,])
lim_p_x <- length(i_linepointx[i_linepointx[,iang] <= 20 & i_linepointx[,iang] >= 0 ,iang])
lim_p_y <- length(i_linepointy[i_linepointy[,iang] <= 20 & i_linepointy[,iang] >= 0 ,iang])
res[min(lim_p_x,lim_p_y)] <- 4
end_p <- which(res != 0)[1]
lestsh_dist[ishrb] <- linepointx[end_p,iang] / cos(lineang * pi / 180)
}
result.shrb.distr[(xi - 1) * 21 + yi, 2 + iang] <- min(lestsh_dist)
}
setTxtProgressBar(pb, (xi - 1) * 21 + yi)
}
}
# arrows(-1.5, -1.5, cos(-temp_WsiteD$SiteDir.E0_left.[1] * pi / 180) - 1.5,
#        sin(-temp_WsiteD$SiteDir.E0_left.[1] * pi / 180) - 1.5 ,angle = 15, length = 0.15)
# text(1.3* cos(-temp_WsiteD$SiteDir.E0_left.[1] * pi / 180) - 1.5,
# #      1.3 * sin(-temp_WsiteD$SiteDir.E0_left.[1] * pi / 180) - 1.5, "N")
# dev.copy(pdf, file=paste("DistributionPlot_",site_name[i],".pdf",sep=""), width = 10, height = 10)
# dev.off()
print(pasti(i,"/",length(site_name),"まで終了",sep ="" ))
}
write.csv(result.shrb.distr, paste(site_name[i],"_shdist.csv", sep = ""),row.names=FALSE)
library(plotrix)
install.packages("plotrix")
result.shrb.distr
library(plotrix)
path <- "E:/Clouds/OneDrive - g.ecc.u-tokyo.ac.jp/LEP/2019/現行資料/1102春期モンゴル解析3/distribution"
setwd(path)
WsiteD <- read.csv("WsiteShrubDistribution.csv",header = T)
site_name <- as.factor(WsiteD$Site)
site_name <- levels(site_name)
i <- 1
temp_WsiteD <- WsiteD[WsiteD$Site == site_name[i],]
wr_filename <- paste(site_name[i],"_shdist.csv", sep = "")
d <- read.csv(wr_filename, header = T)
d2 <- d[,3:ncol(d)]
d2 <- as.matrix(d2)
est_len <- apply(d2, 2, mean)
result <- cbind(as.numeric(colnames(d)[3:ncol(d)]),est_len)
radial.plot(result,lwd = 2,
labels="",
start=0,clockwise=FALSE, rp.type="p")
arrows(0, 0, cos(-temp_WsiteD$SiteDir.E0_left.[1] * pi / 180),
sin(temp_WsiteD$SiteDir.E0_left.[1] * pi / 180)  ,angle = 15, length = 0.15)
d2
est_len <- apply(d2, 2, mean)
est_len
colnames(d)[3:ncol(d)]
as.numeric(colnames(d)[3:ncol(d)])
sub(colnames(d)[3:ncol(d)],"X","")
sub("X","",colnames(d)[3:ncol(d)])
as.numeric(sub("X","",colnames(d)[3:ncol(d)]))
result <- cbind(as.numeric(sub("X","",colnames(d)[3:ncol(d)])),est_len)
radial.plot(result,lwd = 2,
labels="",
start=0,clockwise=FALSE, rp.type="p")
result
result <- est_len
radial.plot(result,lwd = 2,
labels="",
start=0,clockwise=FALSE, rp.type="p")
est_len
arrows(0, 0, cos(-temp_WsiteD$SiteDir.E0_left.[1] * pi / 180),
sin(temp_WsiteD$SiteDir.E0_left.[1] * pi / 180)  ,angle = 15, length = 0.15)
radial.plot(result,lwd = 2,
labels="",
start=0,clockwise=FALSE, rp.type="p",radial.lim =c(0,max(result)*1.2))
arrows(0, 0, cos(-temp_WsiteD$SiteDir.E0_left.[1] * pi / 180),
sin(temp_WsiteD$SiteDir.E0_left.[1] * pi / 180)  ,angle = 15, length = 0.15)
radial.plot(result,lwd = 2,
labels="",
start=0,clockwise=FALSE, rp.type="p",radial.lim =c(0,max(result)*1.2),
show.radial.grid = TRUE)
radial.plot(result,lwd = 2,
labels="",
start=0,clockwise=FALSE, rp.type="p",radial.lim =c(0,max(result)*1.2),
show.radial.grid = TRUE,grid.left = TRUE)
radial.plot(result,lwd = 2,
labels="",
start=0,clockwise=FALSE, rp.type="p",radial.lim =c(0,max(result)*1.2),
show.radial.grid = TRUE,grid.left = TRUE,show.grid.labels = 1)
radial.plot(result,lwd = 2,
labels="",
start=0,clockwise=FALSE, rp.type="p",radial.lim =c(0,max(result)*1.2),
show.radial.grid = TRUE,grid.left = TRUE,show.grid.labels = 2)
labels="",
start=0,clockwise=FALSE, rp.type="p",radial.lim =c(0,max(result)*1.2),
show.radial.grid = TRUE,grid.left = TRUE,show.grid.labels = 3)
radial.plot(result,lwd = 2,
labels="",
start=0,clockwise=FALSE, rp.type="p",radial.lim =c(0,max(result)*1.2),
show.radial.grid = TRUE,grid.left = TRUE,show.grid.labels = 3)
radial.plot(result,lwd = 2,
labels=".",
start=0,clockwise=FALSE, rp.type="p",radial.lim =c(0,max(result)*1.2),
show.radial.grid = TRUE,grid.left = TRUE,show.grid.labels = 3)
radial.plot(result,lwd = 2,
start=0,clockwise=FALSE, rp.type="p",radial.lim =c(0,max(result)*1.2),
show.radial.grid = TRUE,grid.left = TRUE,show.grid.labels = 3)
radial.plot(result,lwd = 2,
labels=c(".",".",".",".",".",".",".","."),
start=0,clockwise=FALSE, rp.type="p",radial.lim =c(0,max(result)*1.2),
show.radial.grid = TRUE,grid.left = TRUE,show.grid.labels = 3)
radial.plot(result,lwd = 2,
labels=c("","","","","","","",""),
start=0,clockwise=FALSE, rp.type="p",radial.lim =c(0,max(result)*1.2),
show.radial.grid = TRUE,grid.left = TRUE,show.grid.labels = 3)
arrows(0, 0, cos(-temp_WsiteD$SiteDir.E0_left.[1] * pi / 180),
sin(temp_WsiteD$SiteDir.E0_left.[1] * pi / 180)  ,angle = 15, length = 0.15)
radial.plot(result,lwd = 2,
labels=c("","","","","","","",""),
start=0,clockwise=FALSE, rp.type="p",radial.lim =c(0,max(result)*1.2),
show.radial.grid = TRUE,grid.left = TRUE,show.grid.labels = 3)
arrows(0, 0, cos(-temp_WsiteD$SiteDir.E0_left.[1] * pi / 180),
sin(temp_WsiteD$SiteDir.E0_left.[1] * pi / 180)  ,angle = 15, length = 0.15,lwd = 2)
radial.plot(result,lwd = 2,
labels=c("","","","","","","",""),
start=0,clockwise=FALSE, rp.type="p",radial.lim =c(0,max(result)*1.1),
show.radial.grid = TRUE,grid.left = TRUE,show.grid.labels = 3)
arrows(0, 0, cos(-temp_WsiteD$SiteDir.E0_left.[1] * pi / 180),
sin(temp_WsiteD$SiteDir.E0_left.[1] * pi / 180)  ,angle = 15, length = 0.15,lwd = 2)
max(result)*1.1
radial.plot(result,lwd = 2,
labels=c("","","","","","","",""),
start=0,clockwise=FALSE, rp.type="p",radial.lim =c(0,trunc(max(result))+1),
show.radial.grid = TRUE,grid.left = TRUE,show.grid.labels = 3)
radial.plot(result,lwd = 2,
labels=c("","","","","","","",""),
start=0,clockwise=FALSE, rp.type="p",radial.lim =c(0,trunc(max(result))+1),
show.radial.grid = TRUE,grid.left = TRUE,show.grid.labels = 3)
arrows(0, 0, cos(-temp_WsiteD$SiteDir.E0_left.[1] * pi / 180),
sin(temp_WsiteD$SiteDir.E0_left.[1] * pi / 180)  ,angle = 15, length = 0.15,lwd = 2)
dev.copy(pdf, file=paste("rosePlot_",site_name[i],".pdf",sep=""), width = 10, height = 10)
dev.off()
mtext(paste("Elongation: ",max(result) / min(result),sep = ""), side = 1, line = 0, at = NA)
radial.plot(result,lwd = 2,
labels=c("","","","","","","",""),
start=0,clockwise=FALSE, rp.type="p",radial.lim =c(0,trunc(max(result))+1),
show.radial.grid = TRUE,grid.left = TRUE,show.grid.labels = 3)
arrows(0, 0, cos(-temp_WsiteD$SiteDir.E0_left.[1] * pi / 180),
sin(temp_WsiteD$SiteDir.E0_left.[1] * pi / 180)  ,angle = 15, length = 0.15,lwd = 2)
mtext(paste("Elongation: ",signif(max(result) / min(result,3)),sep = ""), side = 1, line = 0, at = NA)
radial.plot(result,lwd = 2,
labels=c("","","","","","","",""),
start=0,clockwise=FALSE, rp.type="p",radial.lim =c(0,trunc(max(result))+1),
show.radial.grid = TRUE,grid.left = TRUE,show.grid.labels = 3)
arrows(0, 0, cos(-temp_WsiteD$SiteDir.E0_left.[1] * pi / 180),
sin(temp_WsiteD$SiteDir.E0_left.[1] * pi / 180)  ,angle = 15, length = 0.15,lwd = 2)
mtext(paste("Elongation: ",signif(max(result) / min(result),3),sep = ""), side = 1, line = 0, at = NA)
radial.plot(result,lwd = 2,
labels=c("","","","","","","",""),
start=0,clockwise=FALSE, rp.type="p",radial.lim =c(0,trunc(max(result))+1),
show.radial.grid = TRUE,grid.left = TRUE,show.grid.labels = 3)
arrows(0, 0, cos(-temp_WsiteD$SiteDir.E0_left.[1] * pi / 180),
sin(temp_WsiteD$SiteDir.E0_left.[1] * pi / 180)  ,angle = 15, length = 0.15,lwd = 2)
mtext(paste("Elongation: ",signif(max(result) / min(result),4),sep = ""), side = 1, line = 0, at = NA)
radial.plot(result,lwd = 2,
labels=c("","","","","","","",""),
start=0,clockwise=FALSE, rp.type="p",radial.lim =c(0,trunc(max(result))+1),
show.radial.grid = TRUE,grid.left = TRUE,show.grid.labels = 3)
arrows(0, 0, cos(-temp_WsiteD$SiteDir.E0_left.[1] * pi / 180),
sin(temp_WsiteD$SiteDir.E0_left.[1] * pi / 180)  ,angle = 15, length = 0.15,lwd = 2)
mtext(paste("Elongation: ",signif(max(result) / min(result),3),sep = ""), side = 1, line = 0, at = NA)
library(plotrix)
path <- "E:/Clouds/OneDrive - g.ecc.u-tokyo.ac.jp/LEP/2019/現行資料/1102春期モンゴル解析3/distribution"
setwd(path)
WsiteD <- read.csv("WsiteShrubDistribution.csv",header = T)
site_name <- as.factor(WsiteD$Site)
site_name <- levels(site_name)
for (i in 1:length(site_name)) {
temp_WsiteD <- WsiteD[WsiteD$Site == site_name[i],]
wr_filename <- paste(site_name[i],"_shdist.csv", sep = "")
d <- read.csv(wr_filename, header = T)
d2 <- d[,3:ncol(d)]
d2 <- as.matrix(d2)
est_len <- apply(d2, 2, mean)
# result <- cbind(as.numeric(sub("X","",colnames(d)[3:ncol(d)])),est_len)
result <- est_len
radial.plot(result,lwd = 2,
labels=c("","","","","","","",""),
start=0,clockwise=FALSE, rp.type="p",radial.lim =c(0,trunc(max(result))+1),
show.radial.grid = TRUE,grid.left = TRUE,show.grid.labels = 3)
arrows(0, 0, cos(-temp_WsiteD$SiteDir.E0_left.[1] * pi / 180),
sin(temp_WsiteD$SiteDir.E0_left.[1] * pi / 180)  ,angle = 15, length = 0.15,lwd = 2)
mtext(paste("Elongation: ",signif(max(result) / min(result),3),sep = ""), side = 1, line = 0, at = NA)
dev.copy(pdf, file=paste("rosePlot_",site_name[i],".pdf",sep=""), width = 10, height = 10)
dev.off()
}
#path2 <- "D:/OneDrive - g.ecc.u-tokyo.ac.jp/LEP/2019/現行資料/0802春季モンゴル解析2/OriginalData"
# path2 <- "E:/Clouds/OneDrive - g.ecc.u-tokyo.ac.jp/LEP/2019/現行資料/0802春季モンゴル解析2/OriginalData"
path2 <- "E:/Clouds/OneDrive - g.ecc.u-tokyo.ac.jp/LEP/2019/現行資料/1102春期モンゴル解析3/roughness"
setwd(path2)
d <- read.csv("Veg_EroAnalysis3.csv", header =T)
d
pairs(d[,3:14])
#typeごとの植被率と群落高, Z0
temp.type <- as.factor(d$VegType)
boxplot(d$QuadCover~temp.type,xlab = "community type", ylab = "coverage(%)",
main = "",cex.axis=1.2, cex.lab=1.5,cex.main = 1.5)
dev.copy(pdf, file=paste("Type_Cov2.pdf",sep=""), width = 10, height = 10)
dev.off()
boxplot(d$QuadCommunityHeight~temp.type,xlab = "community type", ylab = "community height(m)",
main = "",cex.axis=1.2, cex.lab=1.5,cex.main = 1.5)
dev.copy(pdf, file=paste("Type_Hght2.pdf",sep=""), width = 10, height = 10)
dev.off()
boxplot(d$Z0~temp.type,xlab = "community type", ylab = "roughness length(m)",
main = "",cex.axis=1.2, cex.lab=1.5,cex.main = 1.5)
dev.copy(pdf, file=paste("Type_Z0.pdf2",sep=""), width = 10, height = 10)
dev.off()
boxplot(d$AveDev~temp.type,xlab = "community type", ylab = "NSDsf",
main = "",cex.axis=1.2, cex.lab=1.5,cex.main = 1.5)
dev.copy(pdf, file=paste("Type_Avedev2.pdf",sep=""), width = 10, height = 10)
dev.off()
d$VegType[d$VegType== 1] <-"Bottom"
d$VegType[d$VegType== 2] <-"SA(N)"
d$VegType[d$VegType== 3] <-"SA(S)"
d$VegType[d$VegType== 4] <-"Nirtaria"
boxplot(d$Z0~temp.type,xlab = "community type", ylab = "roughness length(m)",
main = "",cex.axis=1.2, cex.lab=1.5,cex.main = 1.5)
dev.copy(pdf, file=paste("Type_Z0.pdf2",sep=""), width = 10, height = 10)
dev.off()
boxplot(d$Z0~temp.type,xlab = "community type", ylab = "roughness length(m)",
main = "",cex.axis=1.2, cex.lab=1.5,cex.main = 1.5)
d
temp.type
d$VegType[d$VegType== 1] <-"Bottom"
d$VegType[d$VegType== 2] <-"SA(N)"
d$VegType[d$VegType== 3] <-"SA(S)"
d$VegType[d$VegType== 4] <-"Nirtaria"
boxplot(d$Z0~temp.type,xlab = "community type", ylab = "roughness length(m)",
main = "",cex.axis=1.2, cex.lab=1.5,cex.main = 1.5)
temp.type
d$VegType[d$VegType== 1] <-"Bottom"
temp.type <- as.factor(d$VegType)
boxplot(d$Z0~temp.type,xlab = "community type", ylab = "roughness length(m)",
main = "",cex.axis=1.2, cex.lab=1.5,cex.main = 1.5)
dev.copy(pdf, file=paste("Type_Z0.pdf2",sep=""), width = 10, height = 10)
dev.off()
#path2 <- "D:/OneDrive - g.ecc.u-tokyo.ac.jp/LEP/2019/現行資料/0802春季モンゴル解析2/OriginalData"
# path2 <- "E:/Clouds/OneDrive - g.ecc.u-tokyo.ac.jp/LEP/2019/現行資料/0802春季モンゴル解析2/OriginalData"
path2 <- "E:/Clouds/OneDrive - g.ecc.u-tokyo.ac.jp/LEP/2019/現行資料/1102春期モンゴル解析3/roughness"
setwd(path2)
d <- read.csv("Veg_EroAnalysis3.csv", header =T)
d
plot(d$Z0,d$Ut,xlab = "roughness length(m)", ylab = "threshold friction velocity(m/s)",
main = "",cex.axis=1.2, cex.lab=1.5,cex.main = 1.5)
d.result <- lm(d$Ut~d$Z0)
abline(d.result)
text(0.05,15,label = paste("y = ",round(d.result$coefficients[1],digits = 2), " + ",
round(d.result$coefficients[2],digits = 2),"x\nR^2: ",
round(summary(d.result)$r.squared,digits = 2) ,sep = ""))
text(0.05,5,label = paste("y = ",round(d.result$coefficients[1],digits = 2), " + ",
round(d.result$coefficients[2],digits = 2),"x\nR^2: ",
round(summary(d.result)$r.squared,digits = 2) ,sep = ""))
summary(d.result)
dev.copy(pdf, file=paste("Ust_Z02.pdf",sep=""), width = 10, height = 10)
dev.off()
plot(d$Z0,d$Ut,xlab = "roughness length(m)", ylab = "threshold friction velocity(m/s)",
main = "",cex.axis=1.2, cex.lab=1.5,cex.main = 1.5, col = d$VegType, pch= d$VegType)
legend(0.2,4,c("Bottom","SA(N)","SA(S)","Nirtaria"), col = 1:4, pch= 1:4)
text(0.05,5,label = paste("y = ",round(d.result$coefficients[1],digits = 2), " + ",
round(d.result$coefficients[2],digits = 2),"x\nR^2: ",
round(summary(d.result)$r.squared,digits = 2) ,sep = ""))
abline(d.result)
dev.copy(pdf, file=paste("Ust_Z0_VTCol2.pdf",sep=""), width = 10, height = 10)
dev.off()
#coverと臨界摩擦速度
plot(d$QuadCover,d$Ut,xlab = "Coverage", ylab = "threshold friction velocity(m/s)",
main = "",cex.axis=1.2, cex.lab=1.5,cex.main = 1.5)
d.result <- lm(d$Ut~d$QuadCover)
abline(d.result)
text(35,5,label = paste("y = ",round(d.result$coefficients[1],digits = 2), " + ",
round(d.result$coefficients[2],digits = 2),"x\nR^2: ",
round(summary(d.result)$r.squared,digits = 2) ,sep = ""))
summary(d.result)
dev.copy(pdf, file=paste("Ust_Cov2.pdf",sep=""), width = 10, height = 10)
dev.off()
plot(d$QuadCover,d$Ut,xlab = "Coverage(%)", ylab = "threshold friction velocity(m/s)",
main = "",cex.axis=1.2, cex.lab=1.5,cex.main = 1.5, col = d$VegType, pch= d$VegType)
legend(35,4,c("Bottom","SA(N)","SA(S)","Nirtaria"),col = 1:4, pch= 1:4)
abline(d.result)
text(35,5,label = paste("y = ",round(d.result$coefficients[1],digits = 2), " + ",
round(d.result$coefficients[2],digits = 2),"x\nR^2: ",
round(summary(d.result)$r.squared,digits = 2) ,sep = ""))
dev.copy(pdf, file=paste("Ust_Cov_VTCol2.pdf",sep=""), width = 10, height = 10)
dev.off()
#heightと臨界摩擦速度
temp.hght <- d$QuadCommunityHeight/100
plot(temp.hght,d$Ut,xlab = "community height(m)", ylab = "threshold friction velocity(m/s)",
main = "",cex.axis=1.2, cex.lab=1.5,cex.main = 1.5)
d.result <- lm(d$Ut ~ temp.hght)
abline(d.result)
text(0.12,15,label = paste("y = ",round(d.result$coefficients[1],digits = 2), " + ",
round(d.result$coefficients[2],digits = 2),"x\nR^2: ",
round(summary(d.result)$r.squared,digits = 2) ,sep = ""))
text(0.12,5,label = paste("y = ",round(d.result$coefficients[1],digits = 2), " + ",
round(d.result$coefficients[2],digits = 2),"x\nR^2: ",
round(summary(d.result)$r.squared,digits = 2) ,sep = ""))
dev.copy(pdf, file=paste("Ust_Hght2.pdf",sep=""), width = 10, height = 10)
dev.off()
summary(d.result)
temp.hght <- d$QuadCommunityHeight/100
plot(temp.hght,d$Ut,xlab = "community height(m)", ylab = "threshold friction velocity(m/s)",
main = "",cex.axis=1.2, cex.lab=1.5,cex.main = 1.5, col = d$VegType, pch= d$VegType)
legend(0.14,4,c("Bottom","SA(N)","SA(S)","Nirtaria"), col = 1:4, pch= 1:4)
text(0.12,5,label = paste("y = ",round(d.result$coefficients[1],digits = 2), " + ",
round(d.result$coefficients[2],digits = 2),"x\nR^2: ",
round(summary(d.result)$r.squared,digits = 2) ,sep = ""))
d.result <- lm(d$Ut ~ temp.hght)
abline(d.result)
dev.copy(pdf, file=paste("Ust_Hght_VTCol.pdf",sep=""), width = 10, height = 10)
dev.off()
i
i <- 1
path <- "E:/Clouds/OneDrive - g.ecc.u-tokyo.ac.jp/LEP/2019/現行資料/1102春期モンゴル解析3/distribution"
setwd(path)
WsiteD <- read.csv("WsiteShrubDistribution.csv",header = T)
site_name <- as.factor(WsiteD$Site)
site_name <- levels(site_name)
temp_WsiteD <- WsiteD[WsiteD$Site == site_name[i],]
wr_filename <- paste(site_name[i],"_shdist.csv", sep = "")
d <- read.csv(wr_filename, header = T)
d
d2 <- d[,3:ncol(d)]
d2 <- as.matrix(d2)
d2
rowsum(d2)
rowSums(d2)
d2
rowSums(d2)
rbind(d[,1:2],rowSums(d2))
d[,1:2]
rowSums(d2)
cbind(d[,1:2],rowSums(d2))
map_len <- matrix(NA, nrow=21, ncol=21)
p_len <- cbind(d[,1:2],rowSums(d2))
for (xj in 1:21) {
for (yk in 1:21) {
map_len[yk,xj] <- map_len[(xj - 1) * 21 + yk]
}
}
map_len
map_len
p_len
map_len <- matrix(NA, nrow=21, ncol=21)
p_len <- cbind(d[,1:2],rowSums(d2))
for (xj in 1:21) {
for (yk in 1:21) {
map_len[yk,xj] <- p_len[(xj - 1) * 21 + yk]
}
}
p_len[(xj - 1) * 21 + yk]
p_len
map_len[yk,xj] <- p_len[(xj - 1) * 21 + yk,3]
p_len[(xj - 1) * 21 + yk,3]
map_len[yk,xj]
map_len
map_len <- matrix(NA, nrow=21, ncol=21)
p_len <- cbind(d[,1:2],rowSums(d2))
for (xj in 1:21) {
for (yk in 1:21) {
map_len[yk,xj] <- p_len[(xj - 1) * 21 + yk,3]
}
}
map_len
x <- matrix(rep(0:1,81), 9, 9)
image(x, col=c(0,9))
image()
x
image(map_len)
path <- "E:/Clouds/OneDrive - g.ecc.u-tokyo.ac.jp/LEP/2019/現行資料/1102春期モンゴル解析3/distribution"
setwd(path)
WsiteD <- read.csv("WsiteShrubDistribution.csv",header = T)
site_name <- as.factor(WsiteD$Site)
site_name <- levels(site_name)
for (i in 1:length(site_name)) {
temp_WsiteD <- WsiteD[WsiteD$Site == site_name[i],]
wr_filename <- paste(site_name[i],"_shdist.csv", sep = "")
d <- read.csv(wr_filename, header = T)
d2 <- d[,3:ncol(d)]
d2 <- as.matrix(d2)
map_len <- matrix(NA, nrow=21, ncol=21)
p_len <- cbind(d[,1:2],rowSums(d2))
for (xj in 1:21) {
for (yk in 1:21) {
map_len[yk,xj] <- p_len[(xj - 1) * 21 + yk,3]
}
}
image(map_len)
dev.copy(pdf, file=paste("Map_len",site_name[i],".pdf",sep=""), width = 10, height = 10)
dev.off()
}
xj
yk
xj <- 15
yk = 4
p_len[(xj - 1) * 21 + yk,]
help("image")
map_len
map_len/max(map_len)
image(map_len/max(map_len))
image(map_len*12/max(map_len))
image(map_len)
or (i in 1:length(site_name)) {
temp_WsiteD <- WsiteD[WsiteD$Site == site_name[i],]
wr_filename <- paste(site_name[i],"_shdist.csv", sep = "")
d <- read.csv(wr_filename, header = T)
d2 <- d[,3:ncol(d)]
d2 <- as.matrix(d2)
map_len <- matrix(NA, nrow=21, ncol=21)
p_len <- cbind(d[,1:2],rowSums(d2))
for (xj in 1:21) {
for (yk in 1:21) {
map_len[yk,xj] <- p_len[(xj - 1) * 21 + yk,3]
}
}
image(map_len)
dev.copy(pdf, file=paste("Map_len",site_name[i],".pdf",sep=""), width = 10, height = 10)
dev.off()
}
for (i in 1:length(site_name)) {
temp_WsiteD <- WsiteD[WsiteD$Site == site_name[i],]
wr_filename <- paste(site_name[i],"_shdist.csv", sep = "")
d <- read.csv(wr_filename, header = T)
d2 <- d[,3:ncol(d)]
d2 <- as.matrix(d2)
map_len <- matrix(NA, nrow=21, ncol=21)
p_len <- cbind(d[,1:2],rowSums(d2))
for (xj in 1:21) {
for (yk in 1:21) {
map_len[yk,xj] <- p_len[(xj - 1) * 21 + yk,3]
}
}
image(map_len)
dev.copy(pdf, file=paste("Map_len",site_name[i],".pdf",sep=""), width = 10, height = 10)
dev.off()
}
i
site_name[i]
c.z
